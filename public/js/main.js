const project_list = [
  {
    title:       "Practice Buddy",
    description: "<em><b>Practice Buddy is still in active development.</em></b><br/><br/>Practice Buddy is a tool to help guitarists and bassists practice modes, chords, and songs. It is written as a single page app in ReactJS and uses the newest version of React Router to serve routes.",
    imageSrc:    "images/practicebuddy_logo.png",
    projectLink: "https://smessina.com/practicebuddy/",
    githubLink:  "https://github.com/regexpressyourself/PracticeBuddy",
    techList:    ["ReactJS", "JavaScript", "HTML", "CSS"],
    background:  "background-color:  #F3EFD7"
  },
  {
    title:       "Passman",
    description: "Passman is a CLI password management application written in Python for password generation, storage, retrieval, updates, and removal, complete with a MongoDB cloud storage solution using RESTful principles. Available on Pip.",
    imageSrc:    "images/passmanlogo.png",
    projectLink: "https://pypi.python.org/pypi/passman",
    githubLink:  "https://www.github.com/regexpressyourself/passman",
    techList:    ["Python", "MongoDB"],
    background:  "background-color: #70C1B3"
  },
  {
    title:       "Git Flow",
    description: "Git Flow is an interactive git tutorial that walks users through a git workflow via a step-by-step flowchart. Tutorial content is dynamically generated by manipulating React component state as users work through the flowchart.",
    imageSrc:    "images/GitFlowLogo.png",
    projectLink: "/gitflow",
    githubLink:  "https://www.github.com/regexpressyourself/gitflow",
    techList:    ["ReactJS", "JavaScript", "HTML", "CSS", "Bootstrap"],
    background:  "background-color: #f9f2f4"
  },
  {
    title:       "OrderUp HookUp",
    description: "OrderUp HookUp is a restaurant locator, which uses a Node and Express REST API to cross-reference Google location services with the Yelp Fusion Cloud API to find nearby restaurants.",
    imageSrc:    "images/ohlogo.png",
    projectLink: "http://orderuphookup.com",
    githubLink:  "https://www.github.com/regexpressyourself/OrderUp-HookUp",
    techList:    ["JavaScript", "NodeJS", "Angular 1", "HTML", "CSS", "Bootstrap"],
    background:  "background-color: #E6FAED"
  },
  {
    title:       "Woody At Random",
    description: "Interactive Woody Allen film database, capabale of " +
    "recommending films at random or with interactive search",
    imageSrc:    "images/woody.png",
    techList:    ["PHP", "HTML", "CSS", "JavaScript", "MySQL", "Apache", "Bootstrap"],
    background:  "background-color: #000000",
    projectLink: "http://www.woodyatrandom.com",
    githubLink:  "https://www.github.com/regexpressyourself/Woody-At-Random"
  },
  {
    title:       "Q Programming Language",
    description: " The Q Programming Language is my own programming language, which allows for developers to manipulate a queue data structure. The Q Programming Language supports both compiled and interpreted runtimes, either compiling programs into an executable, or running programs as they are parsed.",
    imageSrc:    "images/qlanguage.png",
    projectLink: "/Q-Programming-Language",
    githubLink:  "https://www.github.com/regexpressyourself/Q-Programming-Language",
    background:  "background-color: #FFF176",
    techList:    ["Java"]
  },
  {
    title:       "Scheduler.py",
    description: "One of my first programs, Scheduler.py is a command-line program that automates retail employee scheduling, including day off requests and preferred shifts in schedule generation.",
    imageSrc:    "images/scheduler.png",
    projectLink: "",
    githubLink:  "https://www.github.com/regexpressyourself/Scheduler.py",
    background:  "background-color: #282A36",
    techList:    ["Python", "Excel"]
  },
  {
    title:       "Turbo Pup Band Site",
    description: "A prototype of a Bootstrap website I created for the band Turbo Pup, using HTML, CSS, jQuery, and Twitter's Bootstrap.",
    imageSrc:    "images/turbo.png",
    projectLink: "/Turbo-Pup-Site",
    githubLink:  "https://www.github.com/regexpressyourself/Turbo-Pup-Site",
    techList:    ["HTML", "CSS", "JavaScript", "jQuery", "Bootstrap"],
    background:  'background-image: url("images/turbo-bg.png")'
  }

];


let get_tech = (tech_list) => {
  project_html = "<p class='project-tech'>";
  if (tech_list.length > 2) {
    for (let tech_item of tech_list){
      if (tech_list.indexOf(tech_item) == tech_list.length-1) {
        project_html += "and ";
        project_html += tech_item + ".";
      }
      else {
        project_html += tech_item + ", ";
      }
    }
  }
  else if (tech_list.length == 2){
    project_html += tech_list[0]+ " and " + tech_list[1];
  }
  else{
    project_html += tech_list[0];
  }

  project_html += "</p>";
  return project_html;
}
let get_header = (title) => {
  return "<h3>"+title+"</h3>";
}

let get_desc= (desc) => {
  return "<p class='proj-desc'>"+desc+"</p>";
}
let get_links= (live, gh, title) => {
  if (live.length && gh.length) {
    return "<p class='proj-link'><a href='"+live+"'>Visit "+title+".</a></p>"+
      "<p class='proj-link'><a title='see the web code for "+title+"' href='"+gh+"'>See the Code.</a></p>";
  }
  else {
    return "<p class='proj-link'><a title='see the web code for "+title+"' href='"+gh+"'>See the Code.</a></p>";
  }
}
let get_img = (img_src, background, project_link, gh_link) => {
  let link = project_link ? project_link : gh_link;
  return "<a href='"+link+"' title=''>"+
    "<div class='project-image' style='"+background+"'>" +
    "<img alt='project logo'" +
    "src='"+img_src+"'/></div></a>"
}

(function() {
  let project_html = "";
  for (let i = 0; i < project_list.length; i++) {
    let current_proj = project_list[i];

    let text_div = "<div class='project-text-container'>";
    text_div += get_tech(current_proj.techList);
    text_div += get_header(current_proj.title);
    text_div += get_desc(current_proj.description);
    text_div += get_links(current_proj.projectLink, 
      current_proj.githubLink, 
      current_proj.title);
    text_div += "</div>";

    let img_div = "<div class='project-image-container'>";
    img_div += get_img(current_proj.imageSrc, 
      current_proj.background, 
      current_proj.projectLink,
      current_proj.githubLink);
    img_div += "</div>";

    project_html += "<div class='project-item'>";
    if (i%2 == 0) {
      project_html += text_div;
      project_html += img_div;
    }
    else {
      project_html += img_div;
      project_html += text_div;
    }
    project_html += "</div>";
  }
  document.getElementById("project-list").innerHTML = project_html;
  document.getElementById("cr-date").innerHTML = new Date().getFullYear();
})();
